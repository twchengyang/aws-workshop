AWSTemplateFormatVersion: 2010-09-09
Description: For aws training

Resources:
  LambdaLogGroupCY:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub /aws/lambda/${EventsConsumerCY}
      RetentionInDays: 7
  
  EventsConsumerCY:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: EventsConsumerCY
      Role: !GetAtt LambdaRoleCY.Arn
      Handler: index.handler
      Runtime: nodejs12.x
      Code:
        ZipFile: |
          exports.handler = (event, context, callback) => {
            console.log("Event: ", JSON.stringify(event));
          }
      MemorySize: 128
      Timeout: 5

  LambdaRoleCY:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaLogPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource:
                  - arn:aws:logs:*:*:*
        - PolicyName: LambdaSQSPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:*
                Resource:
                  - !GetAtt EventQueueCY.Arn

  EventSourceMappingCY:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt EventQueueCY.Arn
      FunctionName: !GetAtt EventsConsumerCY.Arn

  EventQueueCY:
    Type: AWS::SQS::Queue
    Properties:
      # KmsMasterKeyId: String
      MessageRetentionPeriod: 604800
      QueueName: EventQueueCY
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetterQueueCY.Arn
        maxReceiveCount: 3
      Tags: 
        - Key: Purpose
          Value: aws-training
      VisibilityTimeout: 300

  DeadLetterQueueCY:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: DeadLetterQueueCY

  EventQueuePolicyCY:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref EventQueueCY
      PolicyDocument:
        Statement:
          - Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              - !Ref EventQueueCY
            Principal:
              Service:
                - sns.amazonaws.com

  NotificationCY:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: NotificationCY

  SQSSubscription:
    Type: AWS::SNS::Subscription
    Properties: 
      TopicArn: !Ref NotificationCY
      Endpoint: !GetAtt EventQueueCY.Arn
      Protocol: sqs
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DeadLetterQueueCY.Arn
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 20
          minDelayTarget: 10
          maxDelayTarget: 30
          numMinDelayRetries: 3
          numMaxDelayRetries: 17
          numNoDelayRetries: 0
          backoffFunction: exponential
  
  EmailSubscription:
    Type: AWS::SNS::Subscription
    Properties: 
      TopicArn: !Ref NotificationCY
      Endpoint: cheng.yang@thoughtworks.com
      Protocol: email
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DeadLetterQueueCY.Arn
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 20
          minDelayTarget: 10
          maxDelayTarget: 30
          numMinDelayRetries: 3
          numMaxDelayRetries: 17
          numNoDelayRetries: 0
          backoffFunction: exponential

  NotificationPolicyCY:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
            - sns:Subscribe
            - sns:Publish
            - sns:ListSubscriptionsByTopic
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Resource: !Ref NotificationCY
      Topics:
        - !Ref NotificationCY

  
  ScheduleTriggerRuleCY:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets:
      - Id: schedule-trigger-sns
        Arn: !Ref NotificationCY